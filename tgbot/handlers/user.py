from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.methods import SendContact
from aiogram.types import Message
from aiogram.utils.deep_linking import decode_payload

from tgbot.controllers.user_controller import create_user, send_user
from tgbot.keyboards.reply import menu
from tgbot.utilz.payload_parser import payload_parser

user_router = Router()

text =['–ü—Ä–∏–≤–µ—Ç {}üëã',
       'üëÄ –Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏ JustPay',
       '–Ø –µ—â—ë –º–Ω–æ–≥–æ–º—É —É—á—É—Å—å, –Ω–æ —É–∂–µ —É–º–µ—é –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–æ—á–∫–∞–º –ø—Ä–æ–¥–∞–∂–∞–º üòé:',
       "‚úî —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∑–∞ –¥–µ–Ω—å",
       "‚úî —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –µ—Å–ª–∏ –±—ã–ª –≤–æ–∑–≤—Ä–∞—Ç, –Ω–µ –ø—Ä–æ—à–ª–∞ —Å–≤–µ—Ä–∫–∞ –∏—Ç–æ–≥–æ–≤, –±—ã–ª–∏ –æ—à–∏–±–∫–∏ –≤ –ø–ª–∞—Ç–µ–∂–∞—Ö",
       "‚úî —Ñ–∏—Å–∫–∞–ª—å–Ω—ã–µ —á–µ–∫–∏ –ø–æ —Ç–æ—á–∫–∞–º",
       "",
       "–ê –µ—â—ë –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –±–∏–∑–Ω–µ—Å —Ä–µ—à–µ–Ω–∏—è –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏, –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é —ç–∫–≤–∞–π—Ä–∏–Ω–≥–∞ –∏ –ø–æ–∫—É–ø–∫–µ "
       "—Ç–µ—Ä–º–∏–Ω–∞–ª–∞. –î–ª—è —ç—Ç–æ–≥–æ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è"]

@user_router.message(CommandStart())
async def user_start(message: Message):
    print(f'text={message.text}')
    message_texts = message.text

    text_splitted = message_texts.split(' ') # split from 'start <hashed text>'

    if len(text_splitted)==2:
        create_user(message.from_user.id, decode_payload(text_splitted[1]))

        # send user data to message queuue
        # await send_user(message.from_user.id)
    else:
        fio = f'{message.from_user.first_name} {message.from_user.last_name}'
        await message.answer(('\n'.join(text)).format(fio), reply_markup=menu)
